{"version":3,"sources":["asset/Neptunus Text Right 1.png","Navbar.js","Modal.js","listAsset.js","reducer.js","defaultState.js","Asset.js","TransactionForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","src","logo","alt","Modal","modalContent","closeModal","useEffect","setTimeout","listAsset","code","issuer","reducer","state","action","type","isModalOpen","payload","name","value","split","newCode","newIssuer","defaultState","publicKey","assetSend","assetReceive","amountSend","amountReceive","slippage","xdr","Asset","asset","TransactionForm","useReducer","dispatch","fetchUrl","url","a","axios","get","response","data","console","log","submitXDR","signTransaction","SERVER_URL","server","StellarSdk","Server","transactionToSubmit","TransactionBuilder","fromXDR","submitTransaction","handleChange","e","target","parseFloat","loginFreighter","error","getPublicKey","getAmountReceive","then","amount_receive","params","forEach","param","interval","setInterval","clearInterval","isConnected","onClick","onSubmit","preventDefault","htmlFor","step","id","onChange","placeholder","map","max","min","App","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72b418b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Neptunus Text Right 1.7e349a79.png\";","import React from \"react\";\r\nimport logo from \"./asset/Neptunus Text Right 1.png\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst Modal = ({ modalContent, closeModal }) => {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      closeModal();\r\n    }, 3000);\r\n  });\r\n  return <div className=\"modal\">{modalContent}</div>;\r\n};\r\n\r\nexport default Modal;\r\n","export const listAsset = [\r\n  {\r\n    code: \"XLM\",\r\n    issuer: \"GAZDAUCRI3E7APVYGOPLLS6CMMCCXTUZ6ZKWPOS2EMOOGIGOIQWHWYTQ\",\r\n  },\r\n  {\r\n    code: \"LSP\",\r\n    issuer: \"GAZDAUCRI3E7APVYGOPLLS6CMMCCXTUZ6ZKWPOS2EMOOGIGOIQWHWYTQ\",\r\n  },\r\n  {\r\n    code: \"AQUA\",\r\n    issuer: \"GAZDAUCRI3E7APVYGOPLLS6CMMCCXTUZ6ZKWPOS2EMOOGIGOIQWHWYTQ\",\r\n  },\r\n  {\r\n    code: \"TERN\",\r\n    issuer: \"GAZDAUCRI3E7APVYGOPLLS6CMMCCXTUZ6ZKWPOS2EMOOGIGOIQWHWYTQ\",\r\n  },\r\n  {\r\n    code: \"USDC\",\r\n    issuer: \"GAZDAUCRI3E7APVYGOPLLS6CMMCCXTUZ6ZKWPOS2EMOOGIGOIQWHWYTQ\",\r\n  },\r\n  {\r\n    code: \"YBX\",\r\n    issuer: \"GAZDAUCRI3E7APVYGOPLLS6CMMCCXTUZ6ZKWPOS2EMOOGIGOIQWHWYTQ\",\r\n  },\r\n];\r\n","export const reducer = (state, action) => {\r\n  if (action.type === \"SUCCESS_SUBMIT\") {\r\n    return {\r\n      ...state,\r\n      isModalOpen: true,\r\n      modalContent: \"success submit xdr\",\r\n    };\r\n  } else if (action.type === \"CANNOT_SUBMIT\") {\r\n    return {\r\n      ...state,\r\n      isModalOpen: true,\r\n      modalContent: \"cannot submit xdr\",\r\n    };\r\n  } else if (action.type === \"NO_VALUE\") {\r\n    return {\r\n      ...state,\r\n      isModalOpen: true,\r\n      modalContent: \"please enter value\",\r\n    };\r\n  } else if (action.type === \"CHANGE_VALUE\") {\r\n    const { name, value } = action.payload;\r\n    if (name === \"assetSend\" || name === \"assetReceive\") {\r\n      const [newCode, newIssuer] = value.split(\"_\");\r\n      return {\r\n        ...state,\r\n        [name]: {\r\n          code: newCode,\r\n          issuer: newIssuer,\r\n        },\r\n      };\r\n    }\r\n    return {\r\n      ...state,\r\n      [name]: value,\r\n    };\r\n  } else if (action.type === \"ERROR_FETCH\") {\r\n    return {\r\n      ...state,\r\n      isModalOpen: true,\r\n      modalContent: \"cannot fetch url\",\r\n    };\r\n  } else if (action.type === \"CLOSE_MODAL\") {\r\n    return {\r\n      ...state,\r\n      isModalOpen: false,\r\n      modalContent: \"\",\r\n    };\r\n  }\r\n};\r\n","export const defaultState = {\r\n  publicKey: null,\r\n  assetSend: null,\r\n  assetReceive: null,\r\n  amountSend: \"\",\r\n  amountReceive: \"\",\r\n  slippage: \"\",\r\n  xdr: null,\r\n  isModalOpen: false,\r\n  modalContent: null,\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Asset = (asset) => {\r\n  return (\r\n    <>\r\n      <option value={`${asset.code}_${asset.issuer}`}>{asset.code}</option>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { listAsset } from \"./listAsset\";\r\nimport { reducer } from \"./reducer\";\r\nimport { defaultState } from \"./defaultState\";\r\nimport { Asset } from \"./Asset\";\r\nimport axios from \"axios\";\r\nimport {\r\n  isConnected,\r\n  getPublicKey,\r\n  signTransaction,\r\n} from \"@stellar/freighter-api\";\r\nimport StellarSdk from \"stellar-sdk\";\r\n\r\nconst TransactionForm = () => {\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n  const {\r\n    publicKey,\r\n    assetSend,\r\n    assetReceive,\r\n    amountSend,\r\n    amountReceive,\r\n    slippage,\r\n    xdr,\r\n    isModalOpen,\r\n    modalContent,\r\n  } = state;\r\n\r\n  const fetchUrl = async (url) => {\r\n    try {\r\n      const response = await axios.get(url);\r\n      const data = response.data;\r\n      return data;\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch({ type: \"ERROR_FETCH\" });\r\n    }\r\n  };\r\n  const submitXDR = async (url) => {\r\n    try {\r\n      const name = \"xdr\";\r\n      const data = await fetchUrl(url);\r\n      let value = data.xdr;\r\n      console.log(name, value);\r\n      dispatch({\r\n        type: \"CHANGE_VALUE\",\r\n        payload: { name, value },\r\n      });\r\n      value = await signTransaction(xdr, \"TESTNET\");\r\n      dispatch({\r\n        type: \"CHANGE_VALUE\",\r\n        payload: { name, value },\r\n      });\r\n      console.log(\"the transaction\", xdr);\r\n      const SERVER_URL = \"https://horizon-testnet.stellar.org\";\r\n      const server = new StellarSdk.Server(SERVER_URL);\r\n      const transactionToSubmit = StellarSdk.TransactionBuilder.fromXDR(\r\n        xdr,\r\n        SERVER_URL\r\n      );\r\n      const response = await server.submitTransaction(transactionToSubmit);\r\n      console.log(response);\r\n      dispatch({ type: \"SUCCESS_SUBMIT\" });\r\n    } catch {\r\n      dispatch({ type: \"CANNOT_SUBMIT\" });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      publicKey &&\r\n      assetSend &&\r\n      assetReceive &&\r\n      amountSend &&\r\n      amountReceive &&\r\n      slippage\r\n    ) {\r\n      let url = \"https://wy6y1k.deta.dev/fetch_xdr?\";\r\n      const params = [];\r\n      params[0] = `public_key=${publicKey}&`;\r\n      params[1] = `asset_send_code=${assetSend.code}&`;\r\n      params[2] = `asset_send_issuer=${assetSend.issuer}&`;\r\n      params[3] = `asset_receive_code=${assetReceive.code}&`;\r\n      params[4] = `asset_receive_issuer=${assetReceive.issuer}&`;\r\n      params[5] = `amount_send=${amountSend}&`;\r\n      params[6] = `slippage=${slippage}`;\r\n      params.forEach((param) => {\r\n        url += param;\r\n      });\r\n      submitXDR(url);\r\n    } else if (publicKey) {\r\n      dispatch({ type: \"NO_VALUE\" });\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n    if (\r\n      name === \"amountSend\" ||\r\n      name === \"amountReceive\" ||\r\n      name === \"slippage\"\r\n    ) {\r\n      if (value) {\r\n        value = parseFloat(value);\r\n      } else {\r\n        value = \"\";\r\n      }\r\n    }\r\n    dispatch({ type: \"CHANGE_VALUE\", payload: { name, value } });\r\n  };\r\n  const closeModal = () => {\r\n    dispatch({ type: \"CLOSE_MODAL\" });\r\n  };\r\n\r\n  const loginFreighter = async () => {\r\n    let publicKey = \"\";\r\n    let error = \"\";\r\n\r\n    try {\r\n      publicKey = await getPublicKey();\r\n    } catch (e) {\r\n      error = e;\r\n    }\r\n\r\n    if (error) {\r\n      return error;\r\n    }\r\n    const name = \"publicKey\";\r\n    const value = publicKey;\r\n    dispatch({ type: \"CHANGE_VALUE\", payload: { name, value } });\r\n  };\r\n\r\n  const logoutFreighter = () => {\r\n    const name = \"publicKey\";\r\n    const value = null;\r\n    dispatch({ type: \"CHANGE_VALUE\", payload: { name, value } });\r\n  };\r\n\r\n  const getAmountReceive = async (url) => {\r\n    const name = \"amountReceive\";\r\n    const value = await fetchUrl(url).then((data) => {\r\n      return data.amount_receive;\r\n    });\r\n    dispatch({\r\n      type: \"CHANGE_VALUE\",\r\n      payload: { name, value },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (amountSend && assetSend && assetReceive) {\r\n      let url = \"https://wy6y1k.deta.dev/fetch_amount_receive?\";\r\n      const params = [];\r\n      params[0] = `asset_send_code=${assetSend.code}&`;\r\n      params[1] = `asset_send_issuer=${assetSend.issuer}&`;\r\n      params[2] = `asset_receive_code=${assetReceive.code}&`;\r\n      params[3] = `asset_receive_issuer=${assetReceive.issuer}&`;\r\n      params[4] = `amount_send=${amountSend}`;\r\n      params.forEach((param) => {\r\n        url += param;\r\n      });\r\n      getAmountReceive(url);\r\n      const interval = setInterval(() => {\r\n        getAmountReceive(url);\r\n      }, 10000);\r\n\r\n      return () => clearInterval(interval);\r\n    } else if (!amountSend) {\r\n      const name = \"amountReceive\";\r\n      const value = \"\";\r\n      dispatch({\r\n        type: \"CHANGE_VALUE\",\r\n        payload: { name, value },\r\n      });\r\n    }\r\n  }, [amountSend, assetSend, assetReceive]);\r\n\r\n  return (\r\n    <>\r\n      {isConnected() && <h1>user connected</h1>}\r\n      {publicKey && (\r\n        <>\r\n          <h1>{publicKey}</h1>\r\n          <button onClick={logoutFreighter}>logout</button>\r\n        </>\r\n      )}\r\n\r\n      {isModalOpen && (\r\n        <Modal closeModal={closeModal} modalContent={modalContent} />\r\n      )}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amountSend\">Amount Send</label>\r\n          <input\r\n            type=\"number\"\r\n            step={0.0000001}\r\n            id=\"amountSend\"\r\n            name=\"amountSend\"\r\n            value={amountSend}\r\n            onChange={handleChange}\r\n            placeholder=\"0.0000000\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <select name=\"assetSend\" onChange={handleChange}>\r\n            <option value=\"\">Select Asset Type</option>\r\n            {listAsset.map((asset) => {\r\n              return <Asset key={asset.code} {...asset} />;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amountReceive\">Amount Receive</label>\r\n          <input\r\n            type=\"number\"\r\n            step={0.0000001}\r\n            id=\"amountReceive\"\r\n            name=\"amountReceive\"\r\n            value={amountReceive}\r\n            onChange={handleChange}\r\n            placeholder=\"0.0000000\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <select name=\"assetReceive\" onChange={handleChange}>\r\n            <option value=\"\">Select Asset Type</option>\r\n            {listAsset.map((asset) => {\r\n              return <Asset key={asset.code} {...asset} />;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"slippage\">Slippage : </label>\r\n          <input\r\n            type=\"number\"\r\n            step={0.01}\r\n            id=\"slippage\"\r\n            name=\"slippage\"\r\n            value={slippage}\r\n            onChange={handleChange}\r\n            placeholder=\"value between 0-1\"\r\n            max=\"1.00\"\r\n            min=\"0.00\"\r\n          />\r\n        </div>\r\n        {}\r\n        {publicKey ? (\r\n          <button type=\"submit\">submit</button>\r\n        ) : (\r\n          <button onClick={loginFreighter}>login</button>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionForm;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport TransactionForm from \"./TransactionForm\";\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar />\r\n      <TransactionForm />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}